# Collaborators: https://www.w3schools.com/
# Collaborators: https://www.pygame.org/docs/ref/draw.html#pygame.draw.arc
# Collaborators: Sawyer helped me with drawing piechart
import pygame
import math
from sys import exit 
pi = math.pi
pygame.init()
WIDTH = 1300
HEIGHT = 900
screen = pygame.display.set_mode([WIDTH, HEIGHT])
timer = pygame.time.Clock()
fps = 60
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
GRAY = (200, 200, 200)
FONT = pygame.font.Font(None, 32) 
steps = 0

new_user = False
user_name = None
goal_name = None
goal_price = None
goal_eta = None
income = None
expense = None
total_money = 0
typing = False
extra_money = 0
eta = 0
progression = 0

# input box properties
input_box = pygame.Rect(100, 100, 500, 32)
color_inactive = GRAY
color_active = pygame.Color('dodgerblue2')
color = color_inactive
active = False
text = ''

def greeting(screen):
    font = pygame.font.Font('freesansbold.ttf', 32)

    text = font.render(f'WELCOME TO MAKING YOUR DREAM ALIVE', True, 'yellow')

    textRect = text.get_rect()

    textRect.center = (WIDTH // 2, HEIGHT // 2)

    screen.blit(text, textRect)

    font = pygame.font.Font('freesansbold.ttf', 32)

    text = font.render(f'PRESS SPACE TO START', True, 'yellow')

    textRect = text.get_rect()

    textRect.center = (WIDTH // 2, HEIGHT // 2 + 30)

    screen.blit(text, textRect)

def actions_to_start(screen):
    font = pygame.font.Font('freesansbold.ttf', 32)

    text = font.render(f'TO START THE PROGRAM PRESS A', True, 'yellow')

    textRect = text.get_rect()

    textRect.center = (WIDTH // 2, HEIGHT // 2)

    screen.blit(text, textRect)

    font = pygame.font.Font('freesansbold.ttf', 32)

    text = font.render(f'TO EXIT PRESS B', True, 'yellow')

    textRect = text.get_rect()

    textRect.center = (WIDTH // 2, HEIGHT // 2 + 30)

    screen.blit(text, textRect)

def actions_asking_new_old_user(screen):
    font = pygame.font.Font('freesansbold.ttf', 32)

    text = font.render(f'IF YOU ARE A NEW USER PRESS N', True, 'yellow')

    textRect = text.get_rect()

    textRect.center = (WIDTH // 2, HEIGHT // 2)

    screen.blit(text, textRect)

    font = pygame.font.Font('freesansbold.ttf', 32)

    text = font.render(f'IF YOU ARE AN OLD USER PRESS O', True, 'yellow')

    textRect = text.get_rect()

    textRect.center = (WIDTH // 2, HEIGHT // 2 + 30)

    screen.blit(text, textRect)

def actions_asking_user_name(screen):
    font = pygame.font.Font('freesansbold.ttf', 32)

    text = font.render(f'ENTER YOUR USER NAME', True, 'yellow')

    textRect = text.get_rect()

    textRect.center = (WIDTH // 2, HEIGHT // 2)

    screen.blit(text, textRect)

def actions_show_pie_chart(screen):
    font = pygame.font.Font('freesansbold.ttf', 32)

    text = font.render(f'Blue is how much you have saved. Be proud!!!', True, 'yellow')

    textRect = text.get_rect()

    textRect.center = (WIDTH // 2, HEIGHT // 2 - 400)

    screen.blit(text, textRect)

def actions_asking_end_program(screen):
    font = pygame.font.Font('freesansbold.ttf', 32)

    text = font.render(f'To exit program press exit button on top left of window', True, 'yellow')

    textRect = text.get_rect()

    textRect.center = (WIDTH // 2, HEIGHT // 2 + 350)

    screen.blit(text, textRect)

def chat_box(screen):
    txt_surface = FONT.render(text, True, WHITE)
    width = max(500, txt_surface.get_width() + 10)
    input_box.w = width
    pygame.draw.rect(screen, color, input_box, 2) 
    screen.blit(txt_surface, (input_box.x + 5, input_box.y + 5))
    pygame.display.flip()

def actions_enter_goal_name(screen):
    font = pygame.font.Font('freesansbold.ttf', 32)

    text = font.render(f'PLEASE ENTER YOUR GOAL NAME', True, 'yellow')

    textRect = text.get_rect()

    textRect.center = (WIDTH // 2, HEIGHT // 2)

    screen.blit(text, textRect)

def actions_enter_goal_PRICE(screen):
    font = pygame.font.Font('freesansbold.ttf', 32)

    text = font.render(f'PLEASE ENTER YOUR GOAL PRICE, JUST NUMBER NO COMMA', True, 'yellow')

    textRect = text.get_rect()

    textRect.center = (WIDTH // 2, HEIGHT // 2)

    screen.blit(text, textRect)

def actions_enter_goal_eta(screen):
    font = pygame.font.Font('freesansbold.ttf', 32)

    text = font.render(f'WHEN DO YOU WANT TO GET IT? PLEASE ENTER IN NUMBER OF MONTHS', True, 'yellow')

    textRect = text.get_rect()

    textRect.center = (WIDTH // 2, HEIGHT // 2)

    screen.blit(text, textRect)
    
def actions_asking_income(screen):
    font = pygame.font.Font('freesansbold.ttf', 32)

    text = font.render(f'ENTER YOUR YOUR INCOME THIS MONTH, JUST NUMBER NO COMMA', True, 'yellow')

    textRect = text.get_rect()

    textRect.center = (WIDTH // 2, HEIGHT // 2)

    screen.blit(text, textRect)

def actions_asking_expense(screen):
    font = pygame.font.Font('freesansbold.ttf', 32)

    text = font.render(f'ENTER YOUR YOUR EXPENSE THIS MONTH, JUST NUMBER NO COMMA', True, 'yellow')

    textRect = text.get_rect()

    textRect.center = (WIDTH // 2, HEIGHT // 2)

    screen.blit(text, textRect)

def calculating(income, expense, goal_price, total_money, time, new_user):
    if income - expense == 0:
        return ('NO MONEY SAVE THIS MONTH')
    else:
        if new_user == True:
            eta = goal_price // (income - expense)
            if eta > time:
                extra_money = ((eta - time) * (income - expense)) // goal_price
                return extra_money
            else:
                return ('Good job! You are on track to achieve you goal!')
        elif new_user == False:
            total_money += (income - expense)
            eta = (goal_price - total_money) // (income - expense)
            if eta > time:
                extra_money = ((eta - time) * (income - expense)) // goal_price
                return (f'You should save extra {extra_money} each month to get back on track')
            else:
                return ('Good job! You are on track to achieve you goal!')

def calculating_eta(income, expense, goal_price, total_money, time, new_user):
    if income - expense == 0:
        return -1
    else:
        if new_user == True:
            eta = goal_price // (income - expense)
            return eta
        else:
            total_money += (income - expense)
            eta = (goal_price - total_money) // (income - expense)
            return eta

def calculating_extra_money(income, expense, goal_price, total_money, time, eta):
    remaining_money = goal_price - total_money
    if eta == time:
        return 0
    extra_money = remaining_money / (eta - time)
    return round(extra_money, 2)

def calculting_total_money(income, expense, total_money):
    total_money = (income - expense)
    return total_money

def calculating_progression(total_money, goal_price):
    progression = total_money / goal_price
    return progression

def actions_to_present_result(screen, extra_money, eta):
    font = pygame.font.Font('freesansbold.ttf', 32)

    text = font.render(f'You need to save extra {eta} dollars each month to achieve your dream.', True, 'yellow')

    textRect = text.get_rect()

    textRect.center = (WIDTH // 2, HEIGHT // 2)

    screen.blit(text, textRect)

    font = pygame.font.Font('freesansbold.ttf', 32)

    text = font.render(f'Your ETA {eta} months', True, 'yellow')

    textRect = text.get_rect()

    textRect.center = (WIDTH // 2, HEIGHT // 2 + 30)

    screen.blit(text, textRect)

    font = pygame.font.Font('freesansbold.ttf', 32)

    text = font.render(f'Press P to see pie chart of the amount of money you saved', True, 'yellow')

    textRect = text.get_rect()

    textRect.center = (WIDTH // 2, HEIGHT // 2 + 60)

    screen.blit(text, textRect)

def draw_pie_chart(screen, data):
    degree_end_point = 2 * pi * data
    pygame.draw.arc(screen, 'blue', [WIDTH / 2 - 200, HEIGHT / 2 - 200, 400, 400], 0, degree_end_point)
    for i in range(300):
        pygame.draw.arc(screen, 'blue', [WIDTH / 2 - 200 + i, HEIGHT / 2 - 200 + i, 400 - 2 * i, 400 - 2 * i], 0, degree_end_point)
    pygame.draw.arc(screen, 'red', [WIDTH / 2 - 200, HEIGHT / 2 - 200, 400, 400], degree_end_point, 0)

def creating_user_file(user_name, goal_name, goal_price, goal_eta, total_money, eta, progression):
    f = open(f"project#2/storage/{user_name}.txt", "w")
    f.write (user_name + '\n')
    f.write(goal_name + '\n')
    f.write(str(goal_price) + '\n')
    f.write(str(goal_eta) + '\n')
    f.write(str(total_money) + '\n')
    f.write(str(eta) + '\n')
    f.write(str(progression) + '\n')
# project#2/storage
def reading_user(user_name):
    f = open(f"project#2/storage/{user_name}.txt", "r")
    lines = f.readlines()
    for i in range(len(lines)):
        if i == 0:
            user_name = lines[i]
        if i == 1:
            goal_name = lines[i]
        if i == 2:
            goal_price = float(lines[i])
        if i == 3:
            goal_eta = float(lines[i])
        if i == 4:
            total_money = float(lines[i])
        if i == 5:
            eta = lines[i]
        if i == 6:
            progression = float(lines[i])
    return user_name, goal_name, goal_price, goal_eta, total_money, eta, progression

while True:
    timer.tick(fps)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            exit()

        if event.type == pygame.MOUSEBUTTONDOWN:
                typing = True
                if input_box.collidepoint(event.pos):
                    active = not active
                else:
                    active = False
                if active:
                    color = color_active
                else:
                    color = color_inactive

        if event.type == pygame.KEYDOWN:
            if active:
                    typing == True
                    if event.key == pygame.K_RETURN:
                        if steps == 11:
                            user_name = text
                            user_name, goal_name, goal_price, goal_eta, total_money, eta, progression = reading_user(user_name)
                            text = ''
                            steps += 1
                            continue
                        if steps == 3:
                            user_name = text
                            text = ''
                            steps += 1
                            new_user == True
                            continue
                        if steps == 4 or steps == 12:
                            income = text
                            income = float(income)
                            text = ''
                            steps += 1
                            continue
                        if steps == 5 or steps == 13:
                            expense = text
                            expense = float(expense)
                            text = ''
                            steps += 1
                            continue
                        if steps == 6:
                            goal_name = text
                            text = ''
                            steps += 1
                            continue
                        if steps == 7:
                            goal_price = text
                            goal_price = int(goal_price)
                            text = ''
                            steps += 1
                            continue
                        if steps == 8:
                            goal_eta = text
                            goal_eta = int(goal_eta)
                            text = ''
                            steps += 1
                            continue
                    elif event.key == pygame.K_BACKSPACE:
                        text = text[:-1]  
                    else:
                        text += event.unicode
            if event.key == pygame.K_SPACE and typing == False:
                steps = 1
            if event.key == pygame.K_a and typing == False:
                steps = 2
            if event.key == pygame.K_b and typing == False:
                pygame.quit()
                exit()
            if event.key == pygame.K_n and typing == False:
                steps = 3
                new_user == True
            if event.key == pygame.K_o and typing == False:
                new_user = False
                steps = 11
            if event.key == pygame.K_p and typing == False:
                steps = 10
                
    # greeting
    if steps == 0:
        screen.fill('black')
        greeting(screen)
        pygame.display.flip()
        continue
    if steps == 1:
        screen.fill('black')
        actions_to_start(screen)
        pygame.display.flip()
        continue
    if steps == 2:
        screen.fill('black')
        actions_asking_new_old_user(screen)
        pygame.display.flip()
        continue
    if steps == 3:
        screen.fill('black')
        actions_asking_user_name(screen)
        chat_box(screen)
        pygame.display.flip()
        continue
    # new user
    if steps == 4:
        screen.fill('black')
        actions_asking_income(screen)
        chat_box(screen)
        pygame.display.flip()
        continue
    if steps == 5:
        screen.fill('black')
        actions_asking_expense(screen)
        chat_box(screen)
        pygame.display.flip()
        continue
    if steps == 6:
        screen.fill('black')
        actions_enter_goal_name(screen)
        chat_box(screen)
        pygame.display.flip()
        continue
    if steps == 7:
        screen.fill('black')
        actions_enter_goal_PRICE(screen)
        chat_box(screen)
        pygame.display.flip()
        continue
    if steps == 8:
        screen.fill('black')
        actions_enter_goal_eta(screen)
        chat_box(screen)
        pygame.display.flip()
        continue
    if steps == 9:
        typing = False
        total_money = calculting_total_money(income, expense, total_money)
        eta = calculating_eta(income, expense, goal_price, total_money, goal_eta, new_user)
        creating_user_file(user_name, goal_name, goal_price, goal_eta, total_money, eta, progression)
        if eta == -1 or eta > goal_eta:
            extra_money = calculating_extra_money(income, expense, goal_price, total_money, goal_eta, eta)
            progression = calculating_progression(total_money, goal_price)
            screen.fill('black')
            actions_to_present_result(screen, extra_money, goal_eta)
            pygame.display.flip()
            continue
        else:
            progression = calculating_progression(total_money, goal_price)
            steps += 1
    # draw pie chart
    if steps == 10:
        screen.fill('black')
        actions_show_pie_chart(screen)
        draw_pie_chart(screen, progression)
        actions_asking_end_program(screen)
        pygame.display.flip()
        continue
    
    # old user
    if steps == 11:
        screen.fill('black')
        actions_asking_user_name(screen)
        chat_box(screen)
        pygame.display.flip()
        continue    
    if steps == 12:
        screen.fill('black')
        actions_asking_income(screen)
        chat_box(screen)
        pygame.display.flip()
        continue
    if steps == 13:
        screen.fill('black')
        actions_asking_expense(screen)
        chat_box(screen)
        pygame.display.flip()
        continue
    if steps == 14:
        total_money = calculting_total_money(income, expense, total_money)
        eta = calculating_eta(income, expense, goal_price, total_money, goal_eta, new_user)
        creating_user_file(user_name, goal_name, goal_price, goal_eta, total_money, eta, progression)
        typing = False
        if eta == -1 or eta > goal_eta:
            extra_money = calculating_extra_money(income, expense, goal_price, total_money, goal_eta, eta)
            progression = calculating_progression(total_money, goal_price)
            screen.fill('black')
            actions_to_present_result(screen, extra_money, goal_eta)
            pygame.display.flip()
            continue
        else:
            progression = calculating_progression(total_money, goal_price)
            steps = 10
        
    screen.fill((0, 0, 0))
    pygame.display.flip()
